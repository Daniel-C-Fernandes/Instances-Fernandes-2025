###################################################
# Classe 5 : K = 2, M = 2, T = 10, N = 10
# Exemplo: 6.   Nome do arquivo: c5ex06.dat          Semente: 3301

global Q1 = 1e5
global Q2 = 1e5
#-----------------------Parâmetros----------------------
global K = 2 # Gramaturas
global M = 2 # Bobinas mestres (máquinas)
global T = 10 # Períodos
global N = 10 # Itens

global L = [540, 460] # Larguras das bobinas mestres

global l = [52, 58, 77, 86, 90, 121, 140, 141, 149, 150] # Larguras dos itens

global rho = [2.0, 2.0] # Peso específico da bobina mestre

global b = [1080.0 920.0; 1080.0 920.0] # Peso total da bobina mestre
#-----------------------Custos----------------------

# Custo de produção da bobina mestre
global c_x = [
1 1 1 25.055;
1 1 2 25.055;
1 1 3 25.055;
1 1 4 25.055;
1 1 5 25.055;
1 1 6 25.055;
1 1 7 25.055;
1 1 8 25.055;
1 1 9 25.055;
1 1 10 25.055;
1 2 1 17.388;
1 2 2 17.388;
1 2 3 17.388;
1 2 4 17.388;
1 2 5 17.388;
1 2 6 17.388;
1 2 7 17.388;
1 2 8 17.388;
1 2 9 17.388;
1 2 10 17.388;
2 1 1 20.628;
2 1 2 20.628;
2 1 3 20.628;
2 1 4 20.628;
2 1 5 20.628;
2 1 6 20.628;
2 1 7 20.628;
2 1 8 20.628;
2 1 9 20.628;
2 1 10 20.628;
2 2 1 18.308;
2 2 2 18.308;
2 2 3 18.308;
2 2 4 18.308;
2 2 5 18.308;
2 2 6 18.308;
2 2 7 18.308;
2 2 8 18.308;
2 2 9 18.308;
2 2 10 18.308;
]

# cw: custo de estocar uma bobina mestre
global c_w = [
1 1 1 0.013;
1 1 2 0.013;
1 1 3 0.013;
1 1 4 0.013;
1 1 5 0.013;
1 1 6 0.013;
1 1 7 0.013;
1 1 8 0.013;
1 1 9 0.013;
1 1 10 0.013;
1 2 1 0.011;
1 2 2 0.011;
1 2 3 0.011;
1 2 4 0.011;
1 2 5 0.011;
1 2 6 0.011;
1 2 7 0.011;
1 2 8 0.011;
1 2 9 0.011;
1 2 10 0.011;
2 1 1 0.01;
2 1 2 0.01;
2 1 3 0.01;
2 1 4 0.01;
2 1 5 0.01;
2 1 6 0.01;
2 1 7 0.01;
2 1 8 0.01;
2 1 9 0.01;
2 1 10 0.01;
2 2 1 0.008;
2 2 2 0.008;
2 2 3 0.008;
2 2 4 0.008;
2 2 5 0.008;
2 2 6 0.008;
2 2 7 0.008;
2 2 8 0.008;
2 2 9 0.008;
2 2 10 0.008;
]

# cz: custo de setup por bobina mestre
global c_z = [
1 1 1 0.777;
1 1 2 0.777;
1 1 3 0.777;
1 1 4 0.777;
1 1 5 0.777;
1 1 6 0.777;
1 1 7 0.777;
1 1 8 0.777;
1 1 9 0.777;
1 1 10 0.777;
1 2 1 0.817;
1 2 2 0.817;
1 2 3 0.817;
1 2 4 0.817;
1 2 5 0.817;
1 2 6 0.817;
1 2 7 0.817;
1 2 8 0.817;
1 2 9 0.817;
1 2 10 0.817;
2 1 1 1.031;
2 1 2 1.031;
2 1 3 1.031;
2 1 4 1.031;
2 1 5 1.031;
2 1 6 1.031;
2 1 7 1.031;
2 1 8 1.031;
2 1 9 1.031;
2 1 10 1.031;
2 2 1 0.751;
2 2 2 0.751;
2 2 3 0.751;
2 2 4 0.751;
2 2 5 0.751;
2 2 6 0.751;
2 2 7 0.751;
2 2 8 0.751;
2 2 9 0.751;
2 2 10 0.751;
]

# cy: custo de corte por bobina mestre
global c_y = [
1 1 1 3.758;
1 1 2 3.758;
1 1 3 3.758;
1 1 4 3.758;
1 1 5 3.758;
1 1 6 3.758;
1 1 7 3.758;
1 1 8 3.758;
1 1 9 3.758;
1 1 10 3.758;
1 2 1 2.26;
1 2 2 2.26;
1 2 3 2.26;
1 2 4 2.26;
1 2 5 2.26;
1 2 6 2.26;
1 2 7 2.26;
1 2 8 2.26;
1 2 9 2.26;
1 2 10 2.26;
2 1 1 2.888;
2 1 2 2.888;
2 1 3 2.888;
2 1 4 2.888;
2 1 5 2.888;
2 1 6 2.888;
2 1 7 2.888;
2 1 8 2.888;
2 1 9 2.888;
2 1 10 2.888;
2 2 1 1.831;
2 2 2 1.831;
2 2 3 1.831;
2 2 4 1.831;
2 2 5 1.831;
2 2 6 1.831;
2 2 7 1.831;
2 2 8 1.831;
2 2 9 1.831;
2 2 10 1.831;
]

# c_e: Custo de estocar um item de largura l_i
global c_e = [
1 1 1 0.006;
1 1 2 0.006;
1 1 3 0.006;
1 1 4 0.006;
1 1 5 0.006;
1 1 6 0.006;
1 1 7 0.006;
1 1 8 0.006;
1 1 9 0.006;
1 1 10 0.006;
1 2 1 0.005;
1 2 2 0.005;
1 2 3 0.005;
1 2 4 0.005;
1 2 5 0.005;
1 2 6 0.005;
1 2 7 0.005;
1 2 8 0.005;
1 2 9 0.005;
1 2 10 0.005;
2 1 1 0.006;
2 1 2 0.006;
2 1 3 0.006;
2 1 4 0.006;
2 1 5 0.006;
2 1 6 0.006;
2 1 7 0.006;
2 1 8 0.006;
2 1 9 0.006;
2 1 10 0.006;
2 2 1 0.005;
2 2 2 0.005;
2 2 3 0.005;
2 2 4 0.005;
2 2 5 0.005;
2 2 6 0.005;
2 2 7 0.005;
2 2 8 0.005;
2 2 9 0.005;
2 2 10 0.005;
3 1 1 0.006;
3 1 2 0.006;
3 1 3 0.006;
3 1 4 0.006;
3 1 5 0.006;
3 1 6 0.006;
3 1 7 0.006;
3 1 8 0.006;
3 1 9 0.006;
3 1 10 0.006;
3 2 1 0.005;
3 2 2 0.005;
3 2 3 0.005;
3 2 4 0.005;
3 2 5 0.005;
3 2 6 0.005;
3 2 7 0.005;
3 2 8 0.005;
3 2 9 0.005;
3 2 10 0.005;
4 1 1 0.006;
4 1 2 0.006;
4 1 3 0.006;
4 1 4 0.006;
4 1 5 0.006;
4 1 6 0.006;
4 1 7 0.006;
4 1 8 0.006;
4 1 9 0.006;
4 1 10 0.006;
4 2 1 0.005;
4 2 2 0.005;
4 2 3 0.005;
4 2 4 0.005;
4 2 5 0.005;
4 2 6 0.005;
4 2 7 0.005;
4 2 8 0.005;
4 2 9 0.005;
4 2 10 0.005;
5 1 1 0.006;
5 1 2 0.006;
5 1 3 0.006;
5 1 4 0.006;
5 1 5 0.006;
5 1 6 0.006;
5 1 7 0.006;
5 1 8 0.006;
5 1 9 0.006;
5 1 10 0.006;
5 2 1 0.005;
5 2 2 0.005;
5 2 3 0.005;
5 2 4 0.005;
5 2 5 0.005;
5 2 6 0.005;
5 2 7 0.005;
5 2 8 0.005;
5 2 9 0.005;
5 2 10 0.005;
6 1 1 0.006;
6 1 2 0.006;
6 1 3 0.006;
6 1 4 0.006;
6 1 5 0.006;
6 1 6 0.006;
6 1 7 0.006;
6 1 8 0.006;
6 1 9 0.006;
6 1 10 0.006;
6 2 1 0.005;
6 2 2 0.005;
6 2 3 0.005;
6 2 4 0.005;
6 2 5 0.005;
6 2 6 0.005;
6 2 7 0.005;
6 2 8 0.005;
6 2 9 0.005;
6 2 10 0.005;
7 1 1 0.006;
7 1 2 0.006;
7 1 3 0.006;
7 1 4 0.006;
7 1 5 0.006;
7 1 6 0.006;
7 1 7 0.006;
7 1 8 0.006;
7 1 9 0.006;
7 1 10 0.006;
7 2 1 0.005;
7 2 2 0.005;
7 2 3 0.005;
7 2 4 0.005;
7 2 5 0.005;
7 2 6 0.005;
7 2 7 0.005;
7 2 8 0.005;
7 2 9 0.005;
7 2 10 0.005;
8 1 1 0.006;
8 1 2 0.006;
8 1 3 0.006;
8 1 4 0.006;
8 1 5 0.006;
8 1 6 0.006;
8 1 7 0.006;
8 1 8 0.006;
8 1 9 0.006;
8 1 10 0.006;
8 2 1 0.005;
8 2 2 0.005;
8 2 3 0.005;
8 2 4 0.005;
8 2 5 0.005;
8 2 6 0.005;
8 2 7 0.005;
8 2 8 0.005;
8 2 9 0.005;
8 2 10 0.005;
9 1 1 0.006;
9 1 2 0.006;
9 1 3 0.006;
9 1 4 0.006;
9 1 5 0.006;
9 1 6 0.006;
9 1 7 0.006;
9 1 8 0.006;
9 1 9 0.006;
9 1 10 0.006;
9 2 1 0.005;
9 2 2 0.005;
9 2 3 0.005;
9 2 4 0.005;
9 2 5 0.005;
9 2 6 0.005;
9 2 7 0.005;
9 2 8 0.005;
9 2 9 0.005;
9 2 10 0.005;
10 1 1 0.006;
10 1 2 0.006;
10 1 3 0.006;
10 1 4 0.006;
10 1 5 0.006;
10 1 6 0.006;
10 1 7 0.006;
10 1 8 0.006;
10 1 9 0.006;
10 1 10 0.006;
10 2 1 0.005;
10 2 2 0.005;
10 2 3 0.005;
10 2 4 0.005;
10 2 5 0.005;
10 2 6 0.005;
10 2 7 0.005;
10 2 8 0.005;
10 2 9 0.005;
10 2 10 0.005;
]

# csc: custo de setup do padrão de corte (igual para cada padrão j)
global c_sc = [
1 1 1 0.173;
1 1 2 0.173;
1 1 3 0.173;
1 1 4 0.173;
1 1 5 0.173;
1 1 6 0.173;
1 1 7 0.173;
1 1 8 0.173;
1 1 9 0.173;
1 1 10 0.173;
1 2 1 0.077;
1 2 2 0.077;
1 2 3 0.077;
1 2 4 0.077;
1 2 5 0.077;
1 2 6 0.077;
1 2 7 0.077;
1 2 8 0.077;
1 2 9 0.077;
1 2 10 0.077;
2 1 1 0.107;
2 1 2 0.107;
2 1 3 0.107;
2 1 4 0.107;
2 1 5 0.107;
2 1 6 0.107;
2 1 7 0.107;
2 1 8 0.107;
2 1 9 0.107;
2 1 10 0.107;
2 2 1 0.086;
2 2 2 0.086;
2 2 3 0.086;
2 2 4 0.086;
2 2 5 0.086;
2 2 6 0.086;
2 2 7 0.086;
2 2 8 0.086;
2 2 9 0.086;
2 2 10 0.086;
]

# Demandas
global d = [
1 1 1 181;
1 1 2 268;
1 1 3 196;
1 1 4 60;
1 1 5 186;
1 1 6 196;
1 1 7 271;
1 1 8 197;
1 1 9 0;
1 1 10 118;
1 2 1 0;
1 2 2 0;
1 2 3 280;
1 2 4 89;
1 2 5 97;
1 2 6 213;
1 2 7 160;
1 2 8 0;
1 2 9 284;
1 2 10 112;
2 1 1 0;
2 1 2 231;
2 1 3 0;
2 1 4 78;
2 1 5 110;
2 1 6 79;
2 1 7 115;
2 1 8 272;
2 1 9 0;
2 1 10 258;
2 2 1 0;
2 2 2 254;
2 2 3 64;
2 2 4 98;
2 2 5 270;
2 2 6 133;
2 2 7 197;
2 2 8 80;
2 2 9 0;
2 2 10 248;
3 1 1 72;
3 1 2 298;
3 1 3 93;
3 1 4 130;
3 1 5 170;
3 1 6 182;
3 1 7 159;
3 1 8 285;
3 1 9 65;
3 1 10 0;
3 2 1 130;
3 2 2 267;
3 2 3 292;
3 2 4 69;
3 2 5 0;
3 2 6 189;
3 2 7 296;
3 2 8 60;
3 2 9 122;
3 2 10 187;
4 1 1 254;
4 1 2 154;
4 1 3 219;
4 1 4 159;
4 1 5 72;
4 1 6 246;
4 1 7 109;
4 1 8 75;
4 1 9 250;
4 1 10 0;
4 2 1 258;
4 2 2 59;
4 2 3 137;
4 2 4 68;
4 2 5 283;
4 2 6 216;
4 2 7 155;
4 2 8 254;
4 2 9 184;
4 2 10 182;
5 1 1 296;
5 1 2 210;
5 1 3 268;
5 1 4 0;
5 1 5 273;
5 1 6 141;
5 1 7 259;
5 1 8 0;
5 1 9 0;
5 1 10 0;
5 2 1 102;
5 2 2 65;
5 2 3 0;
5 2 4 102;
5 2 5 241;
5 2 6 209;
5 2 7 186;
5 2 8 213;
5 2 9 134;
5 2 10 0;
6 1 1 0;
6 1 2 187;
6 1 3 52;
6 1 4 59;
6 1 5 0;
6 1 6 130;
6 1 7 0;
6 1 8 131;
6 1 9 0;
6 1 10 160;
6 2 1 166;
6 2 2 129;
6 2 3 246;
6 2 4 83;
6 2 5 253;
6 2 6 157;
6 2 7 175;
6 2 8 141;
6 2 9 254;
6 2 10 223;
7 1 1 128;
7 1 2 152;
7 1 3 173;
7 1 4 116;
7 1 5 176;
7 1 6 0;
7 1 7 0;
7 1 8 236;
7 1 9 0;
7 1 10 58;
7 2 1 296;
7 2 2 117;
7 2 3 116;
7 2 4 230;
7 2 5 243;
7 2 6 297;
7 2 7 65;
7 2 8 234;
7 2 9 195;
7 2 10 134;
8 1 1 90;
8 1 2 0;
8 1 3 149;
8 1 4 138;
8 1 5 71;
8 1 6 104;
8 1 7 236;
8 1 8 247;
8 1 9 293;
8 1 10 86;
8 2 1 276;
8 2 2 265;
8 2 3 71;
8 2 4 72;
8 2 5 51;
8 2 6 175;
8 2 7 169;
8 2 8 139;
8 2 9 0;
8 2 10 174;
9 1 1 189;
9 1 2 119;
9 1 3 0;
9 1 4 100;
9 1 5 0;
9 1 6 72;
9 1 7 110;
9 1 8 57;
9 1 9 146;
9 1 10 221;
9 2 1 283;
9 2 2 55;
9 2 3 67;
9 2 4 232;
9 2 5 295;
9 2 6 71;
9 2 7 93;
9 2 8 52;
9 2 9 240;
9 2 10 198;
10 1 1 75;
10 1 2 71;
10 1 3 75;
10 1 4 286;
10 1 5 124;
10 1 6 104;
10 1 7 199;
10 1 8 54;
10 1 9 221;
10 1 10 140;
10 2 1 82;
10 2 2 131;
10 2 3 196;
10 2 4 68;
10 2 5 258;
10 2 6 91;
10 2 7 0;
10 2 8 155;
10 2 9 0;
10 2 10 166;
]

# Perda de papel no setup da máquina
global f = [14.04 11.96; 14.04 11.96]

# c: tempo de corte da bobina mestre
global c_km = [39.96 18.4; 38.88 36.8]

# p: tempo de setup do padrão j para a bobina mestre
global p_km = [4.635 2.134; 4.51 4.269]
# Capacidade média de produção por período:
CM = 588438.0

D_kt = [266922.0 309424.0 246156.0 263930.0 226310.0 238712.0 290410.0 309452.0 245444.0 229270.0; 392574.0 286828.0 295876.0 255632.0 442422.0 360420.0 281138.0 301384.0 291680.0 349876.0]


# Capacidade de produção de jumbo
global Cap_p = [317756.0 317756.0 317756.0 317756.0 317756.0 317756.0 317756.0 317756.0 317756.0 317756.0; 270681.0 270681.0 270681.0 270681.0 270681.0 270681.0 270681.0 270681.0 270681.0 270681.0]

# Capacidade da cortadeira
global Cap_c = [
19716.0;
19716.0;
19716.0;
19716.0;
19716.0;
19716.0;
19716.0;
19716.0;
19716.0;
19716.0;
]
#-----------------------------------------
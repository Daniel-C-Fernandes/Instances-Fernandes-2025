###################################################
# Classe 13 : K = 4, M = 2, T = 10, N = 5
# Exemplo: 7.   Nome do arquivo: c13ex07.dat          Semente: 3006

global Q1 = 1e5
global Q2 = 1e5
#-----------------------Parâmetros----------------------
global K = 4 # Gramaturas
global M = 2 # Bobinas mestres (máquinas)
global T = 10 # Períodos
global N = 5 # Itens

global L = [540, 460] # Larguras das bobinas mestres

global l = [64, 84, 99, 119, 128] # Larguras dos itens

global rho = [2.0, 2.0, 2.0, 2.0] # Peso específico da bobina mestre

global b = [1080.0 920.0; 1080.0 920.0; 1080.0 920.0; 1080.0 920.0] # Peso total da bobina mestre
#-----------------------Custos----------------------

# Custo de produção da bobina mestre
global c_x = [
1 1 1 23.868;
1 1 2 23.868;
1 1 3 23.868;
1 1 4 23.868;
1 1 5 23.868;
1 1 6 23.868;
1 1 7 23.868;
1 1 8 23.868;
1 1 9 23.868;
1 1 10 23.868;
1 2 1 22.355;
1 2 2 22.355;
1 2 3 22.355;
1 2 4 22.355;
1 2 5 22.355;
1 2 6 22.355;
1 2 7 22.355;
1 2 8 22.355;
1 2 9 22.355;
1 2 10 22.355;
2 1 1 25.812;
2 1 2 25.812;
2 1 3 25.812;
2 1 4 25.812;
2 1 5 25.812;
2 1 6 25.812;
2 1 7 25.812;
2 1 8 25.812;
2 1 9 25.812;
2 1 10 25.812;
2 2 1 19.504;
2 2 2 19.504;
2 2 3 19.504;
2 2 4 19.504;
2 2 5 19.504;
2 2 6 19.504;
2 2 7 19.504;
2 2 8 19.504;
2 2 9 19.504;
2 2 10 19.504;
3 1 1 20.735;
3 1 2 20.735;
3 1 3 20.735;
3 1 4 20.735;
3 1 5 20.735;
3 1 6 20.735;
3 1 7 20.735;
3 1 8 20.735;
3 1 9 20.735;
3 1 10 20.735;
3 2 1 18.676;
3 2 2 18.676;
3 2 3 18.676;
3 2 4 18.676;
3 2 5 18.676;
3 2 6 18.676;
3 2 7 18.676;
3 2 8 18.676;
3 2 9 18.676;
3 2 10 18.676;
4 1 1 18.468;
4 1 2 18.468;
4 1 3 18.468;
4 1 4 18.468;
4 1 5 18.468;
4 1 6 18.468;
4 1 7 18.468;
4 1 8 18.468;
4 1 9 18.468;
4 1 10 18.468;
4 2 1 16.192;
4 2 2 16.192;
4 2 3 16.192;
4 2 4 16.192;
4 2 5 16.192;
4 2 6 16.192;
4 2 7 16.192;
4 2 8 16.192;
4 2 9 16.192;
4 2 10 16.192;
]

# cw: custo de estocar uma bobina mestre
global c_w = [
1 1 1 0.01;
1 1 2 0.01;
1 1 3 0.01;
1 1 4 0.01;
1 1 5 0.01;
1 1 6 0.01;
1 1 7 0.01;
1 1 8 0.01;
1 1 9 0.01;
1 1 10 0.01;
1 2 1 0.008;
1 2 2 0.008;
1 2 3 0.008;
1 2 4 0.008;
1 2 5 0.008;
1 2 6 0.008;
1 2 7 0.008;
1 2 8 0.008;
1 2 9 0.008;
1 2 10 0.008;
2 1 1 0.012;
2 1 2 0.012;
2 1 3 0.012;
2 1 4 0.012;
2 1 5 0.012;
2 1 6 0.012;
2 1 7 0.012;
2 1 8 0.012;
2 1 9 0.012;
2 1 10 0.012;
2 2 1 0.01;
2 2 2 0.01;
2 2 3 0.01;
2 2 4 0.01;
2 2 5 0.01;
2 2 6 0.01;
2 2 7 0.01;
2 2 8 0.01;
2 2 9 0.01;
2 2 10 0.01;
3 1 1 0.01;
3 1 2 0.01;
3 1 3 0.01;
3 1 4 0.01;
3 1 5 0.01;
3 1 6 0.01;
3 1 7 0.01;
3 1 8 0.01;
3 1 9 0.01;
3 1 10 0.01;
3 2 1 0.009;
3 2 2 0.009;
3 2 3 0.009;
3 2 4 0.009;
3 2 5 0.009;
3 2 6 0.009;
3 2 7 0.009;
3 2 8 0.009;
3 2 9 0.009;
3 2 10 0.009;
4 1 1 0.01;
4 1 2 0.01;
4 1 3 0.01;
4 1 4 0.01;
4 1 5 0.01;
4 1 6 0.01;
4 1 7 0.01;
4 1 8 0.01;
4 1 9 0.01;
4 1 10 0.01;
4 2 1 0.008;
4 2 2 0.008;
4 2 3 0.008;
4 2 4 0.008;
4 2 5 0.008;
4 2 6 0.008;
4 2 7 0.008;
4 2 8 0.008;
4 2 9 0.008;
4 2 10 0.008;
]

# cz: custo de setup por bobina mestre
global c_z = [
1 1 1 0.812;
1 1 2 0.812;
1 1 3 0.812;
1 1 4 0.812;
1 1 5 0.812;
1 1 6 0.812;
1 1 7 0.812;
1 1 8 0.812;
1 1 9 0.812;
1 1 10 0.812;
1 2 1 1.073;
1 2 2 1.073;
1 2 3 1.073;
1 2 4 1.073;
1 2 5 1.073;
1 2 6 1.073;
1 2 7 1.073;
1 2 8 1.073;
1 2 9 1.073;
1 2 10 1.073;
2 1 1 1.032;
2 1 2 1.032;
2 1 3 1.032;
2 1 4 1.032;
2 1 5 1.032;
2 1 6 1.032;
2 1 7 1.032;
2 1 8 1.032;
2 1 9 1.032;
2 1 10 1.032;
2 2 1 0.8;
2 2 2 0.8;
2 2 3 0.8;
2 2 4 0.8;
2 2 5 0.8;
2 2 6 0.8;
2 2 7 0.8;
2 2 8 0.8;
2 2 9 0.8;
2 2 10 0.8;
3 1 1 0.829;
3 1 2 0.829;
3 1 3 0.829;
3 1 4 0.829;
3 1 5 0.829;
3 1 6 0.829;
3 1 7 0.829;
3 1 8 0.829;
3 1 9 0.829;
3 1 10 0.829;
3 2 1 0.878;
3 2 2 0.878;
3 2 3 0.878;
3 2 4 0.878;
3 2 5 0.878;
3 2 6 0.878;
3 2 7 0.878;
3 2 8 0.878;
3 2 9 0.878;
3 2 10 0.878;
4 1 1 0.831;
4 1 2 0.831;
4 1 3 0.831;
4 1 4 0.831;
4 1 5 0.831;
4 1 6 0.831;
4 1 7 0.831;
4 1 8 0.831;
4 1 9 0.831;
4 1 10 0.831;
4 2 1 0.502;
4 2 2 0.502;
4 2 3 0.502;
4 2 4 0.502;
4 2 5 0.502;
4 2 6 0.502;
4 2 7 0.502;
4 2 8 0.502;
4 2 9 0.502;
4 2 10 0.502;
]

# cy: custo de corte por bobina mestre
global c_y = [
1 1 1 3.103;
1 1 2 3.103;
1 1 3 3.103;
1 1 4 3.103;
1 1 5 3.103;
1 1 6 3.103;
1 1 7 3.103;
1 1 8 3.103;
1 1 9 3.103;
1 1 10 3.103;
1 2 1 2.683;
1 2 2 2.683;
1 2 3 2.683;
1 2 4 2.683;
1 2 5 2.683;
1 2 6 2.683;
1 2 7 2.683;
1 2 8 2.683;
1 2 9 2.683;
1 2 10 2.683;
2 1 1 3.356;
2 1 2 3.356;
2 1 3 3.356;
2 1 4 3.356;
2 1 5 3.356;
2 1 6 3.356;
2 1 7 3.356;
2 1 8 3.356;
2 1 9 3.356;
2 1 10 3.356;
2 2 1 1.95;
2 2 2 1.95;
2 2 3 1.95;
2 2 4 1.95;
2 2 5 1.95;
2 2 6 1.95;
2 2 7 1.95;
2 2 8 1.95;
2 2 9 1.95;
2 2 10 1.95;
3 1 1 2.074;
3 1 2 2.074;
3 1 3 2.074;
3 1 4 2.074;
3 1 5 2.074;
3 1 6 2.074;
3 1 7 2.074;
3 1 8 2.074;
3 1 9 2.074;
3 1 10 2.074;
3 2 1 2.241;
3 2 2 2.241;
3 2 3 2.241;
3 2 4 2.241;
3 2 5 2.241;
3 2 6 2.241;
3 2 7 2.241;
3 2 8 2.241;
3 2 9 2.241;
3 2 10 2.241;
4 1 1 1.847;
4 1 2 1.847;
4 1 3 1.847;
4 1 4 1.847;
4 1 5 1.847;
4 1 6 1.847;
4 1 7 1.847;
4 1 8 1.847;
4 1 9 1.847;
4 1 10 1.847;
4 2 1 1.781;
4 2 2 1.781;
4 2 3 1.781;
4 2 4 1.781;
4 2 5 1.781;
4 2 6 1.781;
4 2 7 1.781;
4 2 8 1.781;
4 2 9 1.781;
4 2 10 1.781;
]

# c_e: Custo de estocar um item de largura l_i
global c_e = [
1 1 1 0.005;
1 1 2 0.005;
1 1 3 0.005;
1 1 4 0.005;
1 1 5 0.005;
1 1 6 0.005;
1 1 7 0.005;
1 1 8 0.005;
1 1 9 0.005;
1 1 10 0.005;
1 2 1 0.006;
1 2 2 0.006;
1 2 3 0.006;
1 2 4 0.006;
1 2 5 0.006;
1 2 6 0.006;
1 2 7 0.006;
1 2 8 0.006;
1 2 9 0.006;
1 2 10 0.006;
1 3 1 0.005;
1 3 2 0.005;
1 3 3 0.005;
1 3 4 0.005;
1 3 5 0.005;
1 3 6 0.005;
1 3 7 0.005;
1 3 8 0.005;
1 3 9 0.005;
1 3 10 0.005;
1 4 1 0.005;
1 4 2 0.005;
1 4 3 0.005;
1 4 4 0.005;
1 4 5 0.005;
1 4 6 0.005;
1 4 7 0.005;
1 4 8 0.005;
1 4 9 0.005;
1 4 10 0.005;
2 1 1 0.005;
2 1 2 0.005;
2 1 3 0.005;
2 1 4 0.005;
2 1 5 0.005;
2 1 6 0.005;
2 1 7 0.005;
2 1 8 0.005;
2 1 9 0.005;
2 1 10 0.005;
2 2 1 0.006;
2 2 2 0.006;
2 2 3 0.006;
2 2 4 0.006;
2 2 5 0.006;
2 2 6 0.006;
2 2 7 0.006;
2 2 8 0.006;
2 2 9 0.006;
2 2 10 0.006;
2 3 1 0.005;
2 3 2 0.005;
2 3 3 0.005;
2 3 4 0.005;
2 3 5 0.005;
2 3 6 0.005;
2 3 7 0.005;
2 3 8 0.005;
2 3 9 0.005;
2 3 10 0.005;
2 4 1 0.005;
2 4 2 0.005;
2 4 3 0.005;
2 4 4 0.005;
2 4 5 0.005;
2 4 6 0.005;
2 4 7 0.005;
2 4 8 0.005;
2 4 9 0.005;
2 4 10 0.005;
3 1 1 0.005;
3 1 2 0.005;
3 1 3 0.005;
3 1 4 0.005;
3 1 5 0.005;
3 1 6 0.005;
3 1 7 0.005;
3 1 8 0.005;
3 1 9 0.005;
3 1 10 0.005;
3 2 1 0.006;
3 2 2 0.006;
3 2 3 0.006;
3 2 4 0.006;
3 2 5 0.006;
3 2 6 0.006;
3 2 7 0.006;
3 2 8 0.006;
3 2 9 0.006;
3 2 10 0.006;
3 3 1 0.005;
3 3 2 0.005;
3 3 3 0.005;
3 3 4 0.005;
3 3 5 0.005;
3 3 6 0.005;
3 3 7 0.005;
3 3 8 0.005;
3 3 9 0.005;
3 3 10 0.005;
3 4 1 0.005;
3 4 2 0.005;
3 4 3 0.005;
3 4 4 0.005;
3 4 5 0.005;
3 4 6 0.005;
3 4 7 0.005;
3 4 8 0.005;
3 4 9 0.005;
3 4 10 0.005;
4 1 1 0.005;
4 1 2 0.005;
4 1 3 0.005;
4 1 4 0.005;
4 1 5 0.005;
4 1 6 0.005;
4 1 7 0.005;
4 1 8 0.005;
4 1 9 0.005;
4 1 10 0.005;
4 2 1 0.006;
4 2 2 0.006;
4 2 3 0.006;
4 2 4 0.006;
4 2 5 0.006;
4 2 6 0.006;
4 2 7 0.006;
4 2 8 0.006;
4 2 9 0.006;
4 2 10 0.006;
4 3 1 0.005;
4 3 2 0.005;
4 3 3 0.005;
4 3 4 0.005;
4 3 5 0.005;
4 3 6 0.005;
4 3 7 0.005;
4 3 8 0.005;
4 3 9 0.005;
4 3 10 0.005;
4 4 1 0.005;
4 4 2 0.005;
4 4 3 0.005;
4 4 4 0.005;
4 4 5 0.005;
4 4 6 0.005;
4 4 7 0.005;
4 4 8 0.005;
4 4 9 0.005;
4 4 10 0.005;
5 1 1 0.005;
5 1 2 0.005;
5 1 3 0.005;
5 1 4 0.005;
5 1 5 0.005;
5 1 6 0.005;
5 1 7 0.005;
5 1 8 0.005;
5 1 9 0.005;
5 1 10 0.005;
5 2 1 0.006;
5 2 2 0.006;
5 2 3 0.006;
5 2 4 0.006;
5 2 5 0.006;
5 2 6 0.006;
5 2 7 0.006;
5 2 8 0.006;
5 2 9 0.006;
5 2 10 0.006;
5 3 1 0.005;
5 3 2 0.005;
5 3 3 0.005;
5 3 4 0.005;
5 3 5 0.005;
5 3 6 0.005;
5 3 7 0.005;
5 3 8 0.005;
5 3 9 0.005;
5 3 10 0.005;
5 4 1 0.005;
5 4 2 0.005;
5 4 3 0.005;
5 4 4 0.005;
5 4 5 0.005;
5 4 6 0.005;
5 4 7 0.005;
5 4 8 0.005;
5 4 9 0.005;
5 4 10 0.005;
]

# csc: custo de setup do padrão de corte (igual para cada padrão j)
global c_sc = [
1 1 1 0.127;
1 1 2 0.127;
1 1 3 0.127;
1 1 4 0.127;
1 1 5 0.127;
1 1 6 0.127;
1 1 7 0.127;
1 1 8 0.127;
1 1 9 0.127;
1 1 10 0.127;
1 2 1 0.134;
1 2 2 0.134;
1 2 3 0.134;
1 2 4 0.134;
1 2 5 0.134;
1 2 6 0.134;
1 2 7 0.134;
1 2 8 0.134;
1 2 9 0.134;
1 2 10 0.134;
2 1 1 0.151;
2 1 2 0.151;
2 1 3 0.151;
2 1 4 0.151;
2 1 5 0.151;
2 1 6 0.151;
2 1 7 0.151;
2 1 8 0.151;
2 1 9 0.151;
2 1 10 0.151;
2 2 1 0.078;
2 2 2 0.078;
2 2 3 0.078;
2 2 4 0.078;
2 2 5 0.078;
2 2 6 0.078;
2 2 7 0.078;
2 2 8 0.078;
2 2 9 0.078;
2 2 10 0.078;
3 1 1 0.073;
3 1 2 0.073;
3 1 3 0.073;
3 1 4 0.073;
3 1 5 0.073;
3 1 6 0.073;
3 1 7 0.073;
3 1 8 0.073;
3 1 9 0.073;
3 1 10 0.073;
3 2 1 0.11;
3 2 2 0.11;
3 2 3 0.11;
3 2 4 0.11;
3 2 5 0.11;
3 2 6 0.11;
3 2 7 0.11;
3 2 8 0.11;
3 2 9 0.11;
3 2 10 0.11;
4 1 1 0.083;
4 1 2 0.083;
4 1 3 0.083;
4 1 4 0.083;
4 1 5 0.083;
4 1 6 0.083;
4 1 7 0.083;
4 1 8 0.083;
4 1 9 0.083;
4 1 10 0.083;
4 2 1 0.085;
4 2 2 0.085;
4 2 3 0.085;
4 2 4 0.085;
4 2 5 0.085;
4 2 6 0.085;
4 2 7 0.085;
4 2 8 0.085;
4 2 9 0.085;
4 2 10 0.085;
]

# Demandas
global d = [
1 1 1 140;
1 1 2 0;
1 1 3 158;
1 1 4 0;
1 1 5 178;
1 1 6 0;
1 1 7 177;
1 1 8 142;
1 1 9 219;
1 1 10 106;
1 2 1 185;
1 2 2 165;
1 2 3 0;
1 2 4 0;
1 2 5 55;
1 2 6 232;
1 2 7 180;
1 2 8 88;
1 2 9 144;
1 2 10 246;
1 3 1 143;
1 3 2 89;
1 3 3 198;
1 3 4 241;
1 3 5 274;
1 3 6 126;
1 3 7 136;
1 3 8 0;
1 3 9 286;
1 3 10 0;
1 4 1 0;
1 4 2 107;
1 4 3 0;
1 4 4 157;
1 4 5 182;
1 4 6 240;
1 4 7 277;
1 4 8 204;
1 4 9 127;
1 4 10 290;
2 1 1 239;
2 1 2 253;
2 1 3 247;
2 1 4 293;
2 1 5 128;
2 1 6 54;
2 1 7 73;
2 1 8 190;
2 1 9 106;
2 1 10 0;
2 2 1 174;
2 2 2 99;
2 2 3 207;
2 2 4 168;
2 2 5 82;
2 2 6 0;
2 2 7 220;
2 2 8 116;
2 2 9 287;
2 2 10 145;
2 3 1 59;
2 3 2 200;
2 3 3 281;
2 3 4 87;
2 3 5 202;
2 3 6 203;
2 3 7 204;
2 3 8 94;
2 3 9 99;
2 3 10 189;
2 4 1 0;
2 4 2 216;
2 4 3 199;
2 4 4 111;
2 4 5 281;
2 4 6 168;
2 4 7 158;
2 4 8 71;
2 4 9 213;
2 4 10 0;
3 1 1 200;
3 1 2 245;
3 1 3 0;
3 1 4 127;
3 1 5 165;
3 1 6 237;
3 1 7 253;
3 1 8 173;
3 1 9 254;
3 1 10 235;
3 2 1 180;
3 2 2 155;
3 2 3 0;
3 2 4 141;
3 2 5 0;
3 2 6 100;
3 2 7 113;
3 2 8 171;
3 2 9 0;
3 2 10 243;
3 3 1 0;
3 3 2 240;
3 3 3 0;
3 3 4 72;
3 3 5 176;
3 3 6 0;
3 3 7 241;
3 3 8 126;
3 3 9 173;
3 3 10 278;
3 4 1 0;
3 4 2 0;
3 4 3 150;
3 4 4 162;
3 4 5 109;
3 4 6 0;
3 4 7 167;
3 4 8 70;
3 4 9 144;
3 4 10 142;
4 1 1 0;
4 1 2 152;
4 1 3 205;
4 1 4 166;
4 1 5 264;
4 1 6 68;
4 1 7 85;
4 1 8 167;
4 1 9 118;
4 1 10 219;
4 2 1 0;
4 2 2 153;
4 2 3 93;
4 2 4 282;
4 2 5 292;
4 2 6 77;
4 2 7 241;
4 2 8 213;
4 2 9 233;
4 2 10 0;
4 3 1 121;
4 3 2 113;
4 3 3 155;
4 3 4 101;
4 3 5 265;
4 3 6 169;
4 3 7 95;
4 3 8 210;
4 3 9 300;
4 3 10 168;
4 4 1 122;
4 4 2 299;
4 4 3 163;
4 4 4 249;
4 4 5 194;
4 4 6 215;
4 4 7 210;
4 4 8 73;
4 4 9 83;
4 4 10 119;
5 1 1 63;
5 1 2 0;
5 1 3 220;
5 1 4 0;
5 1 5 275;
5 1 6 142;
5 1 7 284;
5 1 8 248;
5 1 9 0;
5 1 10 0;
5 2 1 116;
5 2 2 279;
5 2 3 143;
5 2 4 168;
5 2 5 222;
5 2 6 275;
5 2 7 123;
5 2 8 154;
5 2 9 91;
5 2 10 280;
5 3 1 152;
5 3 2 146;
5 3 3 273;
5 3 4 66;
5 3 5 102;
5 3 6 241;
5 3 7 72;
5 3 8 108;
5 3 9 107;
5 3 10 178;
5 4 1 58;
5 4 2 262;
5 4 3 92;
5 4 4 277;
5 4 5 101;
5 4 6 0;
5 4 7 227;
5 4 8 224;
5 4 9 202;
5 4 10 84;
]

# Perda de papel no setup da máquina
global f = [11.88 10.12; 11.88 10.12; 11.88 10.12; 11.88 10.12]

# c: tempo de corte da bobina mestre
global c_km = [45.36 40.48; 41.04 34.96; 39.96 24.84; 33.48 26.68]

# p: tempo de setup do padrão j para a bobina mestre
global p_km = [6.35 5.667; 5.746 4.894; 5.594 3.478; 4.687 3.735]
# Capacidade média de produção por período:
CM = 585491.6

D_kt = [113800.0 127190.0 166830.0 113878.0 210190.0 108534.0 177948.0 187584.0 124216.0 112220.0; 118248.0 176280.0 93518.0 166266.0 147144.0 138222.0 171220.0 154728.0 145398.0 175642.0; 95926.0 156782.0 179330.0 100654.0 193038.0 152150.0 140440.0 118368.0 186286.0 172348.0; 43884.0 188218.0 125478.0 200994.0 164114.0 110114.0 203158.0 126618.0 152018.0 115062.0]


# Capacidade de produção de jumbo
global Cap_p = [316165.0 316165.0 316165.0 316165.0 316165.0 316165.0 316165.0 316165.0 316165.0 316165.0; 269326.0 269326.0 269326.0 269326.0 269326.0 269326.0 269326.0 269326.0 269326.0 269326.0]

# Capacidade da cortadeira
global Cap_c = [
20986.0;
20986.0;
20986.0;
20986.0;
20986.0;
20986.0;
20986.0;
20986.0;
20986.0;
20986.0;
]
#-----------------------------------------